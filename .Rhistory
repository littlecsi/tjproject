}
####################################################################################################
# Main
Edf <- getSectionData(sections[1])
Idf <- getSectionData(sections[2])
Ldf <- getSectionData(sections[3])
colnames(df)
df
Ldf <- getSectionData(sections[3])
Pdf <- getSectionData(sections[4])
Sdf <- getSectionData(sections[5])
Wdf <- getSectionData(sections[6])
df
ncol(Edf)
Ecol(Idf)
ncol(Idf)
ncol(Ldf)
ncol(Pdf)
ncol(Sdf)
ncol(Wdf)
Wdf <- getSectionData(sections[6])
####################################################################################################
# Function
getData <- function(path, n) {
df <- data.frame()
for(i in c(1:n)) {
cat("-", i, "-\n")
dfOne <- read.xlsx(path, sheet=i, colNames=T, rowNames=F)
dfOne <- dfOne[,-c(2,3)]
cat("ncol(df):", ncol(df), ", ncol(dfOne):", ncol(dfOne), "\n")
df <- rbind(df, dfOne)
}
return(df)
}
Wdf <- getSectionData(sections[6])
dafuq <- data.frame()
####################################################################################################
# Function
getData <- function(path, n) {
df <- data.frame()
for(i in c(1:n)) {
cat("-", i, "-\n")
dfOne <- read.xlsx(path, sheet=i, colNames=T, rowNames=F)
dfOne <- dfOne[,-c(2,3)]
dafuq <- dfOne
# cat("ncol(df):", ncol(df), ", ncol(dfOne):", ncol(dfOne), "\n")
df <- rbind(df, dfOne)
}
return(df)
}
Wdf <- getSectionData(sections[6])
str(dafuq)
####################################################################################################
# Function
getData <- function(path, n) {
df <- data.frame()
for(i in c(1:n)) {
cat("-", i, "-\n")
dfOne <- read.xlsx(path, sheet=i, colNames=T, rowNames=F)
dfOne <- dfOne[,-c(2,3)]
cat(str(dfOne))
# cat("ncol(df):", ncol(df), ", ncol(dfOne):", ncol(dfOne), "\n")
df <- rbind(df, dfOne)
}
return(df)
}
Wdf <- getSectionData(sections[6])
getData <- function(path, n) {
df <- data.frame()
for(i in c(1:n)) {
cat("-", i, "-\n")
dfOne <- read.xlsx(path, sheet=i, colNames=T, rowNames=F)
dfOne <- dfOne[,-c(2,3)]
# cat("ncol(df):", ncol(df), ", ncol(dfOne):", ncol(dfOne), "\n")
df <- rbind(df, dfOne)
}
return(df)
}
getSectionData <- function(section) {
path1 <- paste(pathOne, section, "/2018_comment_data_", section, ".xlsx", sep="")
# cat(path1, '\n')
dfOne <- getData(path1, 2)
path2 <- paste(pathOne, section, "/2019_comment_data_", section, ".xlsx", sep="")
# cat(path2, '\n')
dfTwo <- getData(path2, 10)
df <- rbind(dfOne, dfTwo)
}
Wdf <- getSectionData(sections[6])
str(Edf)
mode(Edf$maleRatio)
class(Edf$maleRatio)
####################################################################################################
# Function
getData <- function(path, n) {
df <- data.frame()
for(i in c(1:n)) {
cat("-", i, "-\n")
dfOne <- read.xlsx(path, sheet=i, colNames=T, rowNames=F)
dfOne <- dfOne[,-c(2,3)]
# cat("ncol(df):", ncol(df), ", ncol(dfOne):", ncol(dfOne), "\n")
df <- rbind(df, dfOne)
}
return(df)
}
getSectionData <- function(section) {
path1 <- paste(pathOne, section, "/2018_comment_data_", section, ".xlsx", sep="")
# cat(path1, '\n')
dfOne <- getData(path1, 2)
path2 <- paste(pathOne, section, "/2019_comment_data_", section, ".xlsx", sep="")
# cat(path2, '\n')
dfTwo <- getData(path2, 10)
df <- rbind(dfOne, dfTwo)
}
getMonthlyCmt <- function(df) {
len <- nrow(df)
# cat("len:", len, "\n")
x1 <- c(); x2 <- c(); x3 <- c(); x4 <- c(); x5 <- c(); x6 <- c();
x7 <- c(); x8 <- c(); x9 <- c(); x10 <- c(); x11 <- c(); x12 <- c();
for(l in c(1:len)) {
month <- df[l,4] %>% str_sub(5, 6)
# cat(month, "\n")
if(month == "01") { x1 <- c(x1, df[l,3]) }
if(month == "02") { x2 <- c(x2, df[l,3]) }
if(month == "03") { x3 <- c(x3, df[l,3]) }
if(month == "04") { x4 <- c(x4, df[l,3]) }
if(month == "05") { x5 <- c(x5, df[l,3]) }
if(month == "06") { x6 <- c(x6, df[l,3]) }
if(month == "07") { x7 <- c(x7, df[l,3]) }
if(month == "08") { x8 <- c(x8, df[l,3]) }
if(month == "09") { x9 <- c(x9, df[l,3]) }
if(month == "10") { x10 <- c(x10, df[l,3]) }
if(month == "11") { x11 <- c(x11, df[l,3]) }
if(month == "12") { x12 <- c(x12, df[l,3]) }
}
x1 <- sum(as.numeric(x1)); x2 <- sum(as.numeric(x2)); x3 <- sum(as.numeric(x3))
x4 <- sum(as.numeric(x4)); x5 <- sum(as.numeric(x5)); x6 <- sum(as.numeric(x6))
x7 <- sum(as.numeric(x7)); x8 <- sum(as.numeric(x8)); x9 <- sum(as.numeric(x9))
x10 <- sum(as.numeric(x10)); x11 <- sum(as.numeric(x11)); x12 <- sum(as.numeric(x12))
mCmtTotal <- c(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
return(mCmtTotal)
}
EmCmtTotal <- getMonthlyCmt(Edf)
ImCmtTotal <- getMonthlyCmt(Idf)
LmCmtTotal <- getMonthlyCmt(Ldf)
PmCmtTotal <- getMonthlyCmt(Pdf)
SmCmtTotal <- getMonthlyCmt(Sdf)
WmCmtTotal <- getMonthlyCmt(Wdf)
library(stringr)
EmCmtTotal <- getMonthlyCmt(Edf)
ImCmtTotal <- getMonthlyCmt(Idf)
LmCmtTotal <- getMonthlyCmt(Ldf)
PmCmtTotal <- getMonthlyCmt(Pdf)
SmCmtTotal <- getMonthlyCmt(Sdf)
WmCmtTotal <- getMonthlyCmt(Wdf)
EmCmtTotal
CmtTotaldf <- data.frame(
Economy=EmCmtTotal,
IT=ImCmtTotal,
Life_Cult=LmCmtTotal,
Politics=PmCmtTotal,
Society=SmCmtTotal,
World=WmCmtTotal
)
str(CmtTotaldf)
CmtTotaldf
rownames(CmtTotaldf) <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
CmtTotaldf
library(reshape2)
melt(CmtTotaldf)
CmtTotaldf
CmtTotaldf$Month <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
melt(CmtTotaldf, id.vars="Month")
library(ggplot2)
CmtTotaldf
CmtPlotData1 <- melt(CmtTotaldf, id.vars="Month")
CmtPlotData1
?aes
CmtPlot1 <- ggplot(CmtPlotData1, aes(x=Month, y=value, fill=variable))
CmtPlot1 <- ggplot(CmtPlotData1, aes(x=Month, y=value, fill=variable))
CmtPlot1 <- geom_point()
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(x=Month, y=value, fill=variable))
CmtPlot1 <- geom_point()
CmtPlot1
CmtPlotData1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value))
CmtPlot1 <- geom_point(aes(Month, value))
CmtPlot1
CmtPlot1 <- geom_point(aes(Month, value), position="Identity")
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value))
CmtPlot1 <- geom_point(aes(Month, value), position="Identity")
CmtPlot1
CmtPlot1 <- geom_point(aes(Month, value), data=CmtPlotData1, position="Identity")
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value))
CmtPlot1 <- geom_point(aes(Month, value), data=CmtPlotData1, position="Identity")
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value))
CmtPlot1 <- geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", na.rm=T, show.legend=T)
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value)) + geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", na.rm=T, show.legend=T)
CmtPlot1 <-
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value)) + geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", na.rm=T, show.legend=T)
CmtPlot1 <-
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value)) + geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", na.rm=T, show.legend=T)
# CmtPlot1 <-
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value)) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", na.rm=T, show.legend=T)
# CmtPlot1 <-
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value)) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T)
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value)) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T) +
geom_line()
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value)) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T) +
geom_line()
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value, col=variable)) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T) +
geom_line()
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value, col=variable)) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T) +
geom_line(aes(Month, value, value=value, col=variable))
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value, col=variable)) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T) +
geom_line(aes(Month, value, col=variable))
CmtPlot1
?geom_line
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value, col=variable)) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T) +
geom_line(aes(Month, value, col=variable), data=CmtPlotData1, show.legend=T)
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value, col=variable) group=1) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T) +
geom_line(aes(Month, value, col=variable), data=CmtPlotData1, show.legend=T)
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value, col=variable), group=1) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T) +
geom_line(aes(Month, value, col=variable), data=CmtPlotData1, show.legend=T)
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value, col=variable), group=6) +
geom_point(aes(Month, value), data=CmtPlotData1, stat="identity", position="identity", na.rm=T, show.legend=T) +
geom_line(aes(Month, value, col=variable), data=CmtPlotData1, show.legend=T)
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value, col=variable), group=6) +
geom_point() +
geom_line()
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, value=value, col=variable), group=6) +
geom_point() +
geom_line() +
labs(title="Total Number of Comments per Month throughout the Year")
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable), group=1) +
geom_point() +
geom_line() +
labs(title="Total Number of Comments per Month throughout the Year")
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month throughout the Year")
CmtPlot1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
CmtPlotData1
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
CmtPlotData1
mode(CmtPlotData1)
class(CmtPlotData1)
str(CmtPlotData1)
aa <- CmtPlotData1
aa
class(aa)
aa$Month
order(aa$Month)
aa$Month <- factor(aa$Month, levels=c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct"), labels=c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct"))
aa$Month
aa
ggplot(aa, aes(Month, value, col=variable)) + geom_point() + geom_line(aes(color=variable, group=variable))
CmtPlotData1$Month <- factor(CmtPlotData1,
levels=c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct"),
labels=c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct"))
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
CmtPlotData1 <- melt(CmtTotaldf, id.vars="Month")
CmtPlotData1$Month <- factor(CmtPlotData1$Month,
levels=c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct"),
labels=c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct"))
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
# Order the x variable into the order we want.
xorder <- c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct")
CmtPlotData1$Month <- factor(CmtPlotData1$Month, levels=xorder, labels=xorder)
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
# 귀무가설 : '정치'와 '사회'간의 분포 모양이 동질적이다.
prop.test(x=PmCmtTotal, y=SmCmtTotal, alternative='two.sided', conf.level=0.05)
SmCmtTotal
# 귀무가설 : '정치'와 '사회'간의 분포 모양이 동질적이다.
prop.test(x=PmCmtTotal, n=SmCmtTotal, alternative='two.sided', conf.level=0.05)
length(PmCmtTotal)
length(SmCmtTotal)
# 귀무가설 : '정치'와 '사회'간의 분포 모양이 동질적이다.
prop.test(x=SmCmtTotal, n=PmCmtTotal, alternative='two.sided', conf.level=0.05)
# 귀무가설 : '정치'와 '사회'간의 분포 모양이 동질적이다.
prop.test(x=SmCmtTotal, n=PmCmtTotal, alternative='two.sided', conf.level=0.95)
SmCmtTotal + PmCmtTotal
# 귀무가설 : '정치'와 '사회'간의 분포 모양이 동질적이다.
prop.test(x=SmCmtTotal, n=SmCmtTotal+PmCmtTotal, alternative='two.sided', conf.level=0.95)
# 귀무가설 : '정치'와 '사회'간의 분포 모양이 동질적이다.
prop.test(x=SmCmtTotal, n=SmCmtTotal+PmCmtTotal, p=0.5, alternative='two.sided', conf.level=0.95)
SmCmtTotal
SmCmtTotal+PmCmtTotal
# 귀무가설 : '정치'와 '사회'간의 분포 모양이 동질적이다.
prop.test(x=SmCmtTotal, n=SmCmtTotal+PmCmtTotal, p=0.5, alternative='two.sided', conf.level=0.95)
# 귀무가설 : '정치'와 '사회'간의 분포 모양이 동질적이다.
prop.test(x=SmCmtTotal, n=SmCmtTotal+PmCmtTotal, alternative='two.sided', conf.level=0.95)
library(dplyr)
library(ggplot2)
library(ggdark)
### set work space
setwd('topic/Crime/')
viewClassNMode <- function(data) {
cat('class:', class(data))
cat('\n','mode:', mode(data))
}
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T)
head(df)
### sorting dataset to extract 'Occurred.Date' column
df01 <- df %>% select('Occurred.Date')
head(df01)
### substring years
year <- substr(df01$Occurred.Date, 7, 10)
head(year)
# [1] "1908" "1964" "1973" "1974" "1975" "1975"
### changing data form
tb_year <- table(year)
head(tb_year)
# year
# 1908 1964 1973 1974 1975
# 2    1    1    1    1    2
### data framing
df_year <- as.data.frame(tb_year)
head(df_year)
# year Freq
# 1         2
# 2 1908    1
# 3 1964    1
# 4 1973    1
# 5 1974    1
# 6 1975    2
# extracting specific years(2008~2018)
df <- df_year[35:45,]
mean_occr <- mean(df$Freq)
mean_occr
# [1] 46084.45
regFreq <- as.numeric(df$Freq)
regYear <- as.numeric(df$year)
reg <- lm(formula = regFreq ~ regYear)
summary(reg)
# Call:
#   lm(formula = regFreq ~ regYear)
#
# Residuals:
#   Min      1Q  Median      3Q     Max
# -4146.9  -393.0   343.8   963.0  2693.8
#
# Coefficients:
#   Estimate Std. Error t value Pr(>|t|)
# (Intercept)   8861.5     8190.8   1.082  0.30744
# regYear        930.6      204.1   4.559  0.00137 **
#   ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Residual standard error: 2141 on 9 degrees of freedom
# Multiple R-squared:  0.6978,	Adjusted R-squared:  0.6642
# F-statistic: 20.78 on 1 and 9 DF,  p-value: 0.001369
# making a graphic chart
ggplot(data = df, aes(x = year, y = Freq, group = 1)) +
geom_line(linetype = "dotted", color = "red", size = 2) +
geom_point(color = "blue", size = 3) +
labs(x = "Year", y = "Frequency", title = "The Number of Crime Occurrences per Each Year during the Last 10 years") +
dark_theme_gray() +
# geom_hline(yintercept = mean_occr, color = "orange", size = 1) +
geom_text(aes(label = Freq), vjust = -0.3) +
stat_smooth(method = 'lm', col = 'orange')
library(dplyr)
library(ggplot2)
library(ggdark)
### set work space
setwd('topic/Crime/')
viewClassNMode <- function(data) {
cat('class:', class(data))
cat('\n','mode:', mode(data))
}
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T)
head(df)
### sorting dataset to extract 'Occurred.Date' column
df01 <- df %>% select('Occurred.Date')
head(df01)
### substring years
year <- substr(df01$Occurred.Date, 7, 10)
head(year)
# [1] "1908" "1964" "1973" "1974" "1975" "1975"
### changing data form
tb_year <- table(year)
head(tb_year)
# year
# 1908 1964 1973 1974 1975
# 2    1    1    1    1    2
### data framing
df_year <- as.data.frame(tb_year)
head(df_year)
# year Freq
# 1         2
# 2 1908    1
# 3 1964    1
# 4 1973    1
# 5 1974    1
# 6 1975    2
# extracting specific years(2008~2018)
df <- df_year[35:45,]
mean_occr <- mean(df$Freq)
mean_occr
# [1] 46084.45
regFreq <- as.numeric(df$Freq)
regYear <- as.numeric(df$year)
reg <- lm(formula = regFreq ~ regYear)
summary(reg)
# Call:
#   lm(formula = regFreq ~ regYear)
#
# Residuals:
#   Min      1Q  Median      3Q     Max
# -4146.9  -393.0   343.8   963.0  2693.8
#
# Coefficients:
#   Estimate Std. Error t value Pr(>|t|)
# (Intercept)   8861.5     8190.8   1.082  0.30744
# regYear        930.6      204.1   4.559  0.00137 **
#   ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Residual standard error: 2141 on 9 degrees of freedom
# Multiple R-squared:  0.6978,	Adjusted R-squared:  0.6642
# F-statistic: 20.78 on 1 and 9 DF,  p-value: 0.001369
# making a graphic chart
ggplot(data = df, aes(x = year, y = Freq, group = 1)) +
geom_line(linetype = "dotted", color = "red", size = 2) +
geom_point(color = "blue", size = 3) +
labs(x = "Year", y = "Frequency", title = "The Number of Crime Occurrences per Each Year during the Last 10 years") +
dark_theme_gray() +
# geom_hline(yintercept = mean_occr, color = "orange", size = 1) +
geom_text(aes(label = Freq), vjust = -0.3) +
stat_smooth(method = 'lm', col = 'orange')
CmtPlotData1 <- melt(CmtTotaldf, id.vars="Month")
CmtPlotData1
# Plotting the graph
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
# Order the x variable into the order we want.
xorder <- c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct")
CmtPlotData1$Month <- factor(CmtPlotData1$Month, levels=xorder, labels=xorder)
# Plotting the graph
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
# Plotting the graph
options("scipen" = 100)
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
# 귀무가설 : '정치'와 '사회'간의 분포의 모양이 동질적이다.
var.test(x=PmCmtTotal, y=SmCmtTotal)
# 귀무 가설 : '정치'와 '사회'간의 분포의 모양이 동질적이다.
var.test(x=EmCmtTotal, y=WmCmtTotal)
