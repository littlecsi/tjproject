return(dfOne)
}
getMonthlyCmt <- function(df) {
len <- nrow(df)
# cat("len:", len, "\n")
x1 <- c(); x2 <- c(); x3 <- c(); x4 <- c(); x5 <- c(); x6 <- c();
x7 <- c(); x8 <- c(); x9 <- c(); x10 <- c(); x11 <- c(); x12 <- c();
# get NCOMMENT(6th col)
for(l in c(1:len)) {
month <- df[l,6] %>% str_sub(6, 7)
# cat(month, "\n")
if(month == "01") { x1 <- c(x1, df[l,8]) }
if(month == "02") { x2 <- c(x2, df[l,8]) }
if(month == "03") { x3 <- c(x3, df[l,8]) }
if(month == "04") { x4 <- c(x4, df[l,8]) }
if(month == "05") { x5 <- c(x5, df[l,8]) }
if(month == "06") { x6 <- c(x6, df[l,8]) }
if(month == "07") { x7 <- c(x7, df[l,8]) }
if(month == "08") { x8 <- c(x8, df[l,8]) }
if(month == "09") { x9 <- c(x9, df[l,8]) }
if(month == "10") { x10 <- c(x10, df[l,8]) }
if(month == "11") { x11 <- c(x11, df[l,8]) }
if(month == "12") { x12 <- c(x12, df[l,8]) }
}
x1 <- sum(as.numeric(x1)); x2 <- sum(as.numeric(x2)); x3 <- sum(as.numeric(x3))
x4 <- sum(as.numeric(x4)); x5 <- sum(as.numeric(x5)); x6 <- sum(as.numeric(x6))
x7 <- sum(as.numeric(x7)); x8 <- sum(as.numeric(x8)); x9 <- sum(as.numeric(x9))
x10 <- sum(as.numeric(x10)); x11 <- sum(as.numeric(x11)); x12 <- sum(as.numeric(x12))
mCmtTotal <- c(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
return(mCmtTotal)
}
####################################################################################################
# Main
Edf <- getSectionData(sections[1], 'C')
Idf <- getSectionData(sections[2], 'C')
Ldf <- getSectionData(sections[3], 'C')
Pdf <- getSectionData(sections[4], 'C')
Sdf <- getSectionData(sections[5], 'C')
Wdf <- getSectionData(sections[6], 'C')
# Get Montly Total Comments of each section
EmCmtTotal <- getMonthlyCmt(Edf)
View(Ldf)
####################################################################################################
# Library
library(stringr)
library(reshape2)
library(ggplot2)
source("base/db.R")
####################################################################################################
# Main
Edf <- getSectionData(sections[1], 'C')
Idf <- getSectionData(sections[2], 'C')
Ldf <- getSectionData(sections[3], 'C')
Pdf <- getSectionData(sections[4], 'C')
Sdf <- getSectionData(sections[5], 'C')
Wdf <- getSectionData(sections[6], 'C')
####################################################################################################
# Library
library(stringr)
library(reshape2)
library(ggplot2)
source("base/db.R")
####################################################################################################
# Variable
sections <- c("econ", "IT", "life_cult", "politics", "soc", "world")
####################################################################################################
# Function
dbDisconnectAll <- function(){
ile <- length(dbListConnections(MySQL())  )
lapply( dbListConnections(MySQL()), function(x) dbDisconnect(x) )
cat(sprintf("%s connection(s) closed.\n", ile))
}
## param : section and type(Comment or View)
getSectionData <- function(section, type) {
query01 <- paste('select * from news_',section,' where newsid like "%',type,'%"', sep = '')
dfOne <- dbGetQuery(conn, query01)
return(dfOne)
}
getMonthlyCmt <- function(df) {
len <- nrow(df)
# cat("len:", len, "\n")
x1 <- c(); x2 <- c(); x3 <- c(); x4 <- c(); x5 <- c(); x6 <- c();
x7 <- c(); x8 <- c(); x9 <- c(); x10 <- c(); x11 <- c(); x12 <- c();
# get NCOMMENT(6th col)
for(l in c(1:len)) {
month <- df[l,6] %>% str_sub(6, 7)
# cat(month, "\n")
if(month == "01") { x1 <- c(x1, df[l,8]) }
if(month == "02") { x2 <- c(x2, df[l,8]) }
if(month == "03") { x3 <- c(x3, df[l,8]) }
if(month == "04") { x4 <- c(x4, df[l,8]) }
if(month == "05") { x5 <- c(x5, df[l,8]) }
if(month == "06") { x6 <- c(x6, df[l,8]) }
if(month == "07") { x7 <- c(x7, df[l,8]) }
if(month == "08") { x8 <- c(x8, df[l,8]) }
if(month == "09") { x9 <- c(x9, df[l,8]) }
if(month == "10") { x10 <- c(x10, df[l,8]) }
if(month == "11") { x11 <- c(x11, df[l,8]) }
if(month == "12") { x12 <- c(x12, df[l,8]) }
}
x1 <- sum(as.numeric(x1)); x2 <- sum(as.numeric(x2)); x3 <- sum(as.numeric(x3))
x4 <- sum(as.numeric(x4)); x5 <- sum(as.numeric(x5)); x6 <- sum(as.numeric(x6))
x7 <- sum(as.numeric(x7)); x8 <- sum(as.numeric(x8)); x9 <- sum(as.numeric(x9))
x10 <- sum(as.numeric(x10)); x11 <- sum(as.numeric(x11)); x12 <- sum(as.numeric(x12))
mCmtTotal <- c(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
return(mCmtTotal)
}
####################################################################################################
# Main
Edf <- getSectionData(sections[1], 'C')
Idf <- getSectionData(sections[2], 'C')
Ldf <- getSectionData(sections[3], 'C')
Pdf <- getSectionData(sections[4], 'C')
Sdf <- getSectionData(sections[5], 'C')
Wdf <- getSectionData(sections[6], 'C')
# Get Montly Total Comments of each section
EmCmtTotal <- getMonthlyCmt(Edf)
ImCmtTotal <- getMonthlyCmt(Idf)
LmCmtTotal <- getMonthlyCmt(Ldf)
PmCmtTotal <- getMonthlyCmt(Pdf)
SmCmtTotal <- getMonthlyCmt(Sdf)
WmCmtTotal <- getMonthlyCmt(Wdf)
# Combining above vectors into one data frame
CmtTotaldf <- data.frame(
Economy=EmCmtTotal,
IT=ImCmtTotal,
Life_Cult=LmCmtTotal,
Politics=PmCmtTotal,
Society=SmCmtTotal,
World=WmCmtTotal
)
CmtTotaldf$Month <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
#     Economy     IT Life_Cult Politics Society  World Month
# Jan  659886 112092    260844  1911107 1506685 305898   Jan
# Feb  515121 148336    194695  1717366 1365131 255383   Feb
# Mar  573704 118948    288874  2218102 1709256 354731   Mar
# Apr  407151 108718    154541  1939494 1088885 206754   Apr
# May  496035  96606    178784  2021505 1113531 271456   May
# Jun  414582  94331    209414  1496470 1026012 262090   Jun
# Jul  774258 110048    286352  1857602 1143347 541489   Jul
# Aug  613186 146976    331226  2443301 1590230 582676   Aug
# Sep  394022 129072    254382  2972514 1950946 337660   Sep
# Oct  436861 126394    277971  2222571 1861683 310950   Oct
# Nov  678359 146599    254832  1785598 1618079 270679   Nov
# Dec  700864 127796    206871  1959943 1463843 300111   Dec
CmtPlotData1 <- melt(CmtTotaldf, id.vars="Month")
#    Month  variable   value
# 1    Jan   Economy  659886
# 2    Feb   Economy  515121
# 3    Mar   Economy  573704
# 4    Apr   Economy  407151
# 5    May   Economy  496035
# 6    Jun   Economy  414582
# 7    Jul   Economy  774258
# 8    Aug   Economy  613186
# 9    Sep   Economy  394022
# 10   Oct   Economy  436861
# 11   Nov   Economy  678359
# 12   Dec   Economy  700864
# 13   Jan        IT  112092
# ..........................
# Order the x variable into the order we want.
xorder <- c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct")
CmtPlotData1$Month <- factor(CmtPlotData1$Month, levels=xorder, labels=xorder)
# Plotting the graph
options("scipen" = 100)
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
# 귀무 가설 : '정치'와 'IT' 댓글 수의 의존관계는 서로 없다.
PmCmtTotal
PmCmtTotal/10000
chisq.test(x = PmCmtTotal/10000, y = ImCmtTotal/10000)
?chisq.test
class(PmCmtTotal)
tmp_mx <- matrix(c(PmCmtTotal, ImCmtTotal), byrow = T, ncol = 12)
tmp_mx
chisq.test(tmp_mx)
tmp_mx <- matrix(c(WmCmtTotal, EmCmtTotal), byrow = T, ncol = 12)
tmp_mx
chisq.test(tmp_mx)
class(PmCmtTotal)
tmp_mx <- matrix(c(PmCmtTotal, ImCmtTotal), byrow = T, ncol = 12)
chisq.test(tmp_mx)
tmp_mx <- matrix(c(PmCmtTotal, SmCmtTotal), byrow = T, ncol = 12)
chisq.test(tmp_mx)
tmp_mx <- matrix(c(EmCmtTotal, LmCmtTotal), byrow = T, ncol = 12)
chisq.test(tmp_mx)
####################################################################################################
# Main
type <- 'C'
####################################################################################################
# Main
type <- 'V'
Edf <- getSectionData(sections[1], type)
Idf <- getSectionData(sections[2], type)
Ldf <- getSectionData(sections[3], type)
Pdf <- getSectionData(sections[4], type)
Sdf <- getSectionData(sections[5], type)
Wdf <- getSectionData(sections[6], type)
# Get Montly Total Comments of each section
EmCmtTotal <- getMonthlyCmt(Edf)
ImCmtTotal <- getMonthlyCmt(Idf)
LmCmtTotal <- getMonthlyCmt(Ldf)
PmCmtTotal <- getMonthlyCmt(Pdf)
SmCmtTotal <- getMonthlyCmt(Sdf)
WmCmtTotal <- getMonthlyCmt(Wdf)
# Combining above vectors into one data frame
CmtTotaldf <- data.frame(
Economy=EmCmtTotal,
IT=ImCmtTotal,
Life_Cult=LmCmtTotal,
Politics=PmCmtTotal,
Society=SmCmtTotal,
World=WmCmtTotal
)
CmtTotaldf$Month <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
CmtPlotData1 <- melt(CmtTotaldf, id.vars="Month")
# Order the x variable into the order we want.
xorder <- c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct")
CmtPlotData1$Month <- factor(CmtPlotData1$Month, levels=xorder, labels=xorder)
# Plotting the graph
options("scipen" = 100)
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
# 귀무 가설 : '정치'와 '사회'간의 분포의 모양이 동질적이다.
var.test(x=PmCmtTotal, y=SmCmtTotal)
# 귀무 가설 : '경제'와 '세계'간의 분포의 모양이 동질적이다.
var.test(x=EmCmtTotal, y=WmCmtTotal)
dbDisconnectAll()
####################################################################################################
# Library
library(stringr)
library(reshape2)
library(ggplot2)
source("base/db.R")
####################################################################################################
# Variable
####################################################################################################
# Function
getMonthlyView <- function(df) {
len <- nrow(df)
# cat("len:", len, "\n")
x1 <- c(); x2 <- c(); x3 <- c(); x4 <- c(); x5 <- c(); x6 <- c();
x7 <- c(); x8 <- c(); x9 <- c(); x10 <- c(); x11 <- c(); x12 <- c();
# get NCOMMENT(6th col)
for(l in c(1:len)) {
month <- df[l,6] %>% str_sub(6, 7)
# cat(month, "\n")
if(month == "01") { x1 <- c(x1, df[l,7]) }
if(month == "02") { x2 <- c(x2, df[l,7]) }
if(month == "03") { x3 <- c(x3, df[l,7]) }
if(month == "04") { x4 <- c(x4, df[l,7]) }
if(month == "05") { x5 <- c(x5, df[l,7]) }
if(month == "06") { x6 <- c(x6, df[l,7]) }
if(month == "07") { x7 <- c(x7, df[l,7]) }
if(month == "08") { x8 <- c(x8, df[l,7]) }
if(month == "09") { x9 <- c(x9, df[l,7]) }
if(month == "10") { x10 <- c(x10, df[l,7]) }
if(month == "11") { x11 <- c(x11, df[l,7]) }
if(month == "12") { x12 <- c(x12, df[l,7]) }
}
x1 <- sum(as.numeric(x1)); x2 <- sum(as.numeric(x2)); x3 <- sum(as.numeric(x3))
x4 <- sum(as.numeric(x4)); x5 <- sum(as.numeric(x5)); x6 <- sum(as.numeric(x6))
x7 <- sum(as.numeric(x7)); x8 <- sum(as.numeric(x8)); x9 <- sum(as.numeric(x9))
x10 <- sum(as.numeric(x10)); x11 <- sum(as.numeric(x11)); x12 <- sum(as.numeric(x12))
mViewTotal <- c(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
return(mViewTotal)
}
####################################################################################################
# Main
##################################################
### Comment
Edf <- getSectionData(sections[1], 'V')
Idf <- getSectionData(sections[2], 'V')
Ldf <- getSectionData(sections[3], 'V')
Pdf <- getSectionData(sections[4], 'V')
Sdf <- getSectionData(sections[5], 'V')
Wdf <- getSectionData(sections[6], 'V')
# Get Montly Total Comments of each section
EmViewTotal <- getMonthlyView(Edf)
ImViewTotal <- getMonthlyView(Idf)
LmViewTotal <- getMonthlyView(Ldf)
PmViewTotal <- getMonthlyView(Pdf)
SmViewTotal <- getMonthlyView(Sdf)
WmViewTotal <- getMonthlyView(Wdf)
# Combining above vectors into one data frame
ViewTotaldf <- data.frame(
Economy=EmViewTotal,
IT=ImViewTotal,
Life_Cult=LmViewTotal,
Politics=PmViewTotal,
Society=SmViewTotal,
World=WmViewTotal
)
ViewTotaldf$Month <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
# Economy       IT Life_Cult  Politics   Society    World Month
# 1  100360767 24318368  66185551  94377073 224854699 56742533   Jan
# 2   82605339 26571839  60148342  81224742 195040992 52918607   Feb
# 3   92725836 22961125  81840238 102367831 274495875 69620547   Mar
# 4   64376011 26225649  29612244  90189555 171676720 45618439   Apr
# 5   58151423 17556183  30631936  79373214 143327966 49052918   May
# 6   47012168 15552585  36170789  69076368 148542046 54264870   Jun
# 7   74764867 20546391  47437879  80397013 155554583 66601541   Jul
# 8   81484980 31272142  64107155  99438941 149975828 86008202   Aug
# 9   59604523 28324852  58441438 113892992 152266161 63514743   Sep
# 10  56800322 27399146  53852995  90718911 163767600 67452310   Oct
# 11 110081071 36879388  80367084 104291507 272089629 66053212   Nov
# 12 106837908 26320105  88204415  45959082 242464417 74342050   Dec
ViewPlotData1 <- melt(ViewTotaldf, id.vars="Month")
# Month  variable     value
# 1    Jan   Economy 100360767
# 2    Feb   Economy  82605339
# 3    Mar   Economy  92725836
# 4    Apr   Economy  64376011
# 5    May   Economy  58151423
# 6    Jun   Economy  47012168
# 7    Jul   Economy  74764867
# 8    Aug   Economy  81484980
# 9    Sep   Economy  59604523
# 10   Oct   Economy  56800322
# 11   Nov   Economy 110081071
# 12   Dec   Economy 106837908
# 13   Jan        IT  24318368
# ............................
# Order the x variable into the order we want.
xorder <- c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct")
ViewPlotData1$Month <- factor(ViewPlotData1$Month, levels=xorder, labels=xorder)
# Plotting the graph
options("scipen" = 100)
ViewPlot1 <- ggplot(ViewPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Views per Month (2018.11 ~ 2019.10)", y="Views") +
theme(axis.line=element_line(color="Black", size=1, linetype="solid"))
ViewPlot1
# 귀무 가설 : '정치'와 '사회'간의 분포의 모양이 동질적이다.
var.test(x=PmViewTotal, y=SmViewTotal)
# F test to compare two variances
#
# data:  PmViewTotal and SmViewTotal
# F = 0.13443, num df = 11, denom df = 11, p-value = 0.002414
# alternative hypothesis: true ratio of variances is not equal to 1
# 95 percent confidence interval:
#     0.03869802 0.46695290
# sample estimates:
#     ratio of variances
# 0.1344253
# p-value(0.002414) < 0.05 이므로 귀무 가설 기각.
# '정치'와 '사회'간의 분포 형태가 동질하다고 볼 수 없다.
# 귀무 가설 : '경제'와 '세계'간의 분포의 모양이 동질적이다.
var.test(x=EmViewTotal, y=WmViewTotal)
# F test to compare two variances
#
# data:  EmViewTotal and WmViewTotal
# F = 3.3973, num df = 11, denom df = 11, p-value = 0.054
# alternative hypothesis: true ratio of variances is not equal to 1
# 95 percent confidence interval:
#     0.9780036 11.8011635
# sample estimates:
#     ratio of variances
# 3.39729
# p-value(0.054) > 0.05 이므로 귀무 가설 채택.
# '경제'와 '세계'간의 분포 형태가 동질하다고 볼 수 있다.
dbDisconnectAll()
chisq.test(matrix(c(LmViewTotal, WmViewTotal), byrow = T, ncol = 12))
chisq.test(matrix(c(LmViewTotal/10000, WmViewTotal/10000), byrow = T, ncol = 12))
chisq.test(matrix(c(LmViewTotal/100000, WmViewTotal/100000), byrow = T, ncol = 12))
chisq.test(matrix(c(LmViewTotal/1000000, WmViewTotal/1000000), byrow = T, ncol = 12))
chisq.test(matrix(c(LmViewTotal/10000000, WmViewTotal/10000000), byrow = T, ncol = 12))
chisq.test(matrix(c(LmViewTotal/1000000, WmViewTotal/1000000), byrow = T, ncol = 12))
tmp_mx <- matrix(c(EmCmtTotal/1000000, LmCmtTotal/1000000), byrow = T, ncol = 12)
chisq.test(tmp_mx)
####################################################################################################
# Library
library(stringr)
library(reshape2)
library(ggplot2)
source("base/db.R")
####################################################################################################
# Variable
sections <- c("econ", "IT", "life_cult", "politics", "soc", "world")
####################################################################################################
# Function
dbDisconnectAll <- function(){
ile <- length(dbListConnections(MySQL())  )
lapply( dbListConnections(MySQL()), function(x) dbDisconnect(x) )
cat(sprintf("%s connection(s) closed.\n", ile))
}
## param : section and type(Comment or View)
getSectionData <- function(section, type) {
query01 <- paste('select * from news_',section,' where newsid like "%',type,'%"', sep = '')
dfOne <- dbGetQuery(conn, query01)
return(dfOne)
}
getMonthlyCmt <- function(df) {
len <- nrow(df)
# cat("len:", len, "\n")
x1 <- c(); x2 <- c(); x3 <- c(); x4 <- c(); x5 <- c(); x6 <- c();
x7 <- c(); x8 <- c(); x9 <- c(); x10 <- c(); x11 <- c(); x12 <- c();
# get NCOMMENT(6th col)
for(l in c(1:len)) {
month <- df[l,6] %>% str_sub(6, 7)
# cat(month, "\n")
if(month == "01") { x1 <- c(x1, df[l,8]) }
if(month == "02") { x2 <- c(x2, df[l,8]) }
if(month == "03") { x3 <- c(x3, df[l,8]) }
if(month == "04") { x4 <- c(x4, df[l,8]) }
if(month == "05") { x5 <- c(x5, df[l,8]) }
if(month == "06") { x6 <- c(x6, df[l,8]) }
if(month == "07") { x7 <- c(x7, df[l,8]) }
if(month == "08") { x8 <- c(x8, df[l,8]) }
if(month == "09") { x9 <- c(x9, df[l,8]) }
if(month == "10") { x10 <- c(x10, df[l,8]) }
if(month == "11") { x11 <- c(x11, df[l,8]) }
if(month == "12") { x12 <- c(x12, df[l,8]) }
}
x1 <- sum(as.numeric(x1)); x2 <- sum(as.numeric(x2)); x3 <- sum(as.numeric(x3))
x4 <- sum(as.numeric(x4)); x5 <- sum(as.numeric(x5)); x6 <- sum(as.numeric(x6))
x7 <- sum(as.numeric(x7)); x8 <- sum(as.numeric(x8)); x9 <- sum(as.numeric(x9))
x10 <- sum(as.numeric(x10)); x11 <- sum(as.numeric(x11)); x12 <- sum(as.numeric(x12))
mCmtTotal <- c(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
return(mCmtTotal)
}
####################################################################################################
# Main
type <- 'C'
Edf <- getSectionData(sections[1], type)
Idf <- getSectionData(sections[2], type)
Ldf <- getSectionData(sections[3], type)
Pdf <- getSectionData(sections[4], type)
Sdf <- getSectionData(sections[5], type)
Wdf <- getSectionData(sections[6], type)
# Get Montly Total Comments of each section
EmCmtTotal <- getMonthlyCmt(Edf)
ImCmtTotal <- getMonthlyCmt(Idf)
LmCmtTotal <- getMonthlyCmt(Ldf)
PmCmtTotal <- getMonthlyCmt(Pdf)
SmCmtTotal <- getMonthlyCmt(Sdf)
WmCmtTotal <- getMonthlyCmt(Wdf)
# Combining above vectors into one data frame
CmtTotaldf <- data.frame(
Economy=EmCmtTotal,
IT=ImCmtTotal,
Life_Cult=LmCmtTotal,
Politics=PmCmtTotal,
Society=SmCmtTotal,
World=WmCmtTotal
)
CmtTotaldf$Month <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
#     Economy     IT Life_Cult Politics Society  World Month
# Jan  659886 112092    260844  1911107 1506685 305898   Jan
# Feb  515121 148336    194695  1717366 1365131 255383   Feb
# Mar  573704 118948    288874  2218102 1709256 354731   Mar
# Apr  407151 108718    154541  1939494 1088885 206754   Apr
# May  496035  96606    178784  2021505 1113531 271456   May
# Jun  414582  94331    209414  1496470 1026012 262090   Jun
# Jul  774258 110048    286352  1857602 1143347 541489   Jul
# Aug  613186 146976    331226  2443301 1590230 582676   Aug
# Sep  394022 129072    254382  2972514 1950946 337660   Sep
# Oct  436861 126394    277971  2222571 1861683 310950   Oct
# Nov  678359 146599    254832  1785598 1618079 270679   Nov
# Dec  700864 127796    206871  1959943 1463843 300111   Dec
CmtPlotData1 <- melt(CmtTotaldf, id.vars="Month")
#    Month  variable   value
# 1    Jan   Economy  659886
# 2    Feb   Economy  515121
# 3    Mar   Economy  573704
# 4    Apr   Economy  407151
# 5    May   Economy  496035
# 6    Jun   Economy  414582
# 7    Jul   Economy  774258
# 8    Aug   Economy  613186
# 9    Sep   Economy  394022
# 10   Oct   Economy  436861
# 11   Nov   Economy  678359
# 12   Dec   Economy  700864
# 13   Jan        IT  112092
# ..........................
# Order the x variable into the order we want.
xorder <- c("Nov","Dec","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct")
CmtPlotData1$Month <- factor(CmtPlotData1$Month, levels=xorder, labels=xorder)
# Plotting the graph
options("scipen" = 100)
CmtPlot1 <- ggplot(CmtPlotData1, aes(Month, value, col=variable)) +
geom_point() +
geom_line(aes(color=variable, group=variable)) +
labs(title="Total Number of Comments per Month (2018.11 ~ 2019.10)")
CmtPlot1
# 귀무 가설 : '정치'와 'IT' 댓글 수의 의존관계는 서로 없다.
chisq.test(tmp_mx)
tmp_mx <- matrix(c(EmCmtTotal/1000000, LmCmtTotal/1000000), byrow = T, ncol = 12)
chisq.test(tmp_mx)
PmCmtTotal
ImCmtTotal
WmCmtTotal
SmCmtTotal
# 귀무 가설 : '정치'와 '사회'간의 분포의 모양이 동질적이다.
fisher.test(x=ImCmtTotal, y=SmCmtTotal)
fisher.test(x=EmCmtTotal, y=WmCmtTotal)
tmp_mx <- matrix(c(EmCmtTotal/100000, LmCmtTotal/100000), byrow = T, ncol = 12)
chisq.test(tmp_mx)
tmp_mx <- matrix(c(EmCmtTotal/10000, LmCmtTotal/10000), byrow = T, ncol = 12)
chisq.test(tmp_mx)
tmp_mx <- matrix(c(ImCmtTotal/10000, LmCmtTotal/10000), byrow = T, ncol = 12)
chisq.test(tmp_mx)
dbDisconnectAll()
